# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

# 1ES Pipeline template does not support matrix strategy. Instead, we will use a template to define the matrix.
# Note that one can also use variables to define the matrix, but we will use a template for this example to avoid string manipulation.
parameters:
- name: targets
  type: object
  # You should change the pool name defaults to a 1ES PT pool for your project.
  default:
  - target: i686-pc-windows-msvc
    pool:
      name: Azure Pipelines
      os: windows
      image: Windows2025_1ESPT
- name: profiles
  type: object
  default:
  - dev
  - release

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

variables:
- name: toolchainFeed
  value: https://onedrive.pkgs.visualstudio.com/b52099a6-3b13-4b08-9270-a07884a10e3d/_packaging/RustTools/nuget/v3/index.json
- name: cratesIoFeed
  value: sparse+https://onedrive.pkgs.visualstudio.com/b52099a6-3b13-4b08-9270-a07884a10e3d/_packaging/RustCratesIO/Cargo/index/

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      sourceAnalysisPool:
        # SDL tools only support Windows.
        name: Azure Pipelines
        os: windows
        image: Windows2025_1ESPT
    stages:

    ## For more details on the Rust build workflow, see https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/buildworkflows/rust
    - stage: BuildStage
      displayName: üèóÔ∏è Cargo build
      jobs:
      - ${{ each target in parameters.targets }}:
        - ${{ each profile in parameters.profiles }}:
          - job: BuildJob_${{ target.pool.os }}_${{ profile }}
            displayName: üèóÔ∏è Cargo build for ${{ target.target }} ${{ profile }}
            pool: ${{ target.pool }}
            templateContext:
              type: buildJob
              workflow: Rust
              rust:
                rustToolchain:
                  toolchainFeed: $(toolchainFeed)
                  cratesIoFeed: $(cratesIoFeed)
                target: ${{ target.target }}
                profile: ${{ profile }}
              sdl:
                componentgovernance:
                  enabled: true
                  failOnAlert: true


