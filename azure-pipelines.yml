# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Azure Pipelines
  vmImage: windows-latest

steps:
- task: ssplat.rust-build-release-tools.rust-installer-task.RustInstaller@1
  displayName: 'Install Rust '
  inputs:
    rustVersion: 'ms-1.70'
    additionalTargets: 'i686-pc-windows-msvc'
    toolchainFeed: https://onedrive.pkgs.visualstudio.com/b52099a6-3b13-4b08-9270-a07884a10e3d/_packaging/RustTools/nuget/v3/index.json
    cratesIoFeedOverride: sparse+https://onedrive.pkgs.visualstudio.com/b52099a6-3b13-4b08-9270-a07884a10e3d/_packaging/RustCratesIO/Cargo/index/

- script: |
   cargo build --locked 2>&1
   
  displayName: 'Build debug'

- script: |
   cargo install junit-test
   junit-test
   copy junit.xml $(System.DefaultWorkingDirectory)\TEST-rust.xml
  displayName: 'Test debug'

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TEST-*.xml'
  inputs:
    mergeTestResults: true

- script: 'cargo build --locked --release 2>&1'
  displayName: 'Build Release'

- task: CopyFiles@2
  displayName: 'Copy Rust output files to: $(Build.ArtifactStagingDirectory) copy'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     target\debug\?(*.dll|*.exe|*.pdb)
     target\release\?(*.dll|*.exe|*.pdb)
     
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: 'drop_lepton_jpeg_rust'

- task: PublishSymbols@2
  displayName: 'Publish symbols copy'
  inputs:
    SymbolsFolder: '$(Build.ArtifactStagingDirectory)'
    SearchPattern: '**\*.pdb'
    SymbolServerType: TeamServices

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: package/Lepton.Jpeg.Rust.nuspec

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)\*.nupkg'
    publishVstsFeed: 'b87285d9-99ab-48db-a000-cb0cc8a2a1b5'
    allowPackageConflicts: true
  condition: and(succeeded(), in(variables['Build.Reason'], 'Manual'))
