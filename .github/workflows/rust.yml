name: Rust

permissions:
  contents: read
  checks: write
  pull-requests: write 

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-wasip1,aarch64-unknown-linux-musl,x86_64-pc-windows-msvc,x86_64-unknown-linux-gnu
          components: rustfmt,clippy

      # Install nextest
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Check formatting
        run: cargo fmt --check --all
      - name: Build default target
        run: cargo build --locked --workspace
      - name: Build wasm32-wasip1
        run: cargo build --locked --target wasm32-wasip1 --manifest-path lib/Cargo.toml
      - name: Build aarch64-unknown-linux-musl
        run: cargo build --locked --target aarch64-unknown-linux-musl --manifest-path lib/Cargo.toml
      - name: Build x86_64-pc-windows-msvc
        run: cargo build --locked --target x86_64-pc-windows-msvc --lib --workspace
      - name: Build x86_64-pc-windows-msvc release
        run: cargo build --locked --target x86_64-pc-windows-msvc --lib --workspace --release
      # Run tests with nextest and output JUnit results
      - name: Run tests
        run: |
          cargo nextest run --workspace --profile ci --message-format junit --output-file junit.xml

      # Upload test results so GitHub shows pass/fail per test
      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action/windows@v2
        if: always() # Upload even if tests fail
        with:
          files: junit.xml